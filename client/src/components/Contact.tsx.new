import { useRef, useState, useEffect } from "react";
import { motion, useAnimation, AnimatePresence } from "framer-motion";
import { Button } from "@/components/ui/button";
import { CONTACT_INFO, SOCIAL_MEDIA, WHATSAPP_NUMBER } from "@/lib/constants";
import { useAnimateOnScroll } from "@/hooks/useAnimateOnScroll";
import { useToast } from "@/hooks/use-toast";
import { apiRequest } from "@/lib/queryClient";
import { useMutation } from "@tanstack/react-query";

const Contact = () => {
  const sectionRef = useRef<HTMLDivElement>(null);
  useAnimateOnScroll(sectionRef);
  const { toast } = useToast();
  const controls = useAnimation();
  const [activeField, setActiveField] = useState<string | null>(null);
  
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    service: "",
    message: ""
  });
  
  const [isSubmitting, setIsSubmitting] = useState(false);
  
  useEffect(() => {
    if (sectionRef.current) {
      controls.start({ opacity: 1, y: 0 });
    }
  }, [controls]);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { id, value } = e.target;
    setFormData(prev => ({ ...prev, [id]: value }));
  };
  
  const handleFocus = (id: string) => {
    setActiveField(id);
  };
  
  const handleBlur = () => {
    setActiveField(null);
  };
  
  const contactMutation = useMutation({
    mutationFn: async (data: typeof formData) => {
      return await apiRequest('/api/contact', {
        method: 'POST',
        body: JSON.stringify({
          name: data.name,
          email: data.email,
          phone: data.phone,
          service_type: data.service,
          message: data.message,
          read: 0
        }),
        headers: {
          'Content-Type': 'application/json'
        }
      });
    },
    onSuccess: () => {
      toast({
        title: "Mensagem enviada!",
        description: "Entraremos em contato em breve.",
        variant: "default"
      });
      
      setFormData({
        name: "",
        email: "",
        phone: "",
        service: "",
        message: ""
      });
    },
    onError: (error) => {
      console.error("Erro ao enviar mensagem:", error);
      toast({
        title: "Erro ao enviar mensagem",
        description: "Ocorreu um erro ao enviar sua mensagem. Por favor, tente novamente mais tarde.",
        variant: "destructive"
      });
    },
    onSettled: () => {
      setIsSubmitting(false);
    }
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!formData.name || !formData.email || !formData.phone || !formData.service || !formData.message) {
      toast({
        title: "Erro no formulário",
        description: "Por favor, preencha todos os campos do formulário.",
        variant: "destructive"
      });
      return;
    }
    
    setIsSubmitting(true);
    contactMutation.mutate(formData);
  };

  const formFieldVariants = {
    hidden: { opacity: 0, y: 10 },
    visible: (i: number) => ({
      opacity: 1,
      y: 0,
      transition: {
        delay: i * 0.1,
        duration: 0.3
      }
    })
  };

  return (
    <section id="contato" ref={sectionRef} className="py-20 bg-gray-50">
      <div className="container mx-auto px-4 max-w-5xl">
        <div className="text-center mb-10">
          <span className="text-blue-600 font-medium text-sm tracking-wider">CONTATO</span>
          <h2 className="text-3xl font-bold mt-2 mb-3">Entre em contato</h2>
          <p className="text-gray-600 max-w-2xl mx-auto">
            Solicite um orçamento sem compromisso ou tire suas dúvidas com nossa equipe
          </p>
        </div>
        
        <div className="flex flex-col md:flex-row gap-6">
          <div className="md:w-1/3">
            <div className="bg-white p-6 rounded-lg border border-gray-200 h-full">
              <h3 className="font-semibold text-lg mb-4">Informações de Contato</h3>
              
              <div className="space-y-4">
                {[
                  { icon: "fas fa-phone", title: "Telefone", content: CONTACT_INFO.phone },
                  { icon: "fas fa-envelope", title: "Email", content: CONTACT_INFO.email },
                  { icon: "fas fa-map-marker-alt", title: "Endereço", content: [CONTACT_INFO.address, CONTACT_INFO.addressDetails] },
                  { icon: "fas fa-clock", title: "Horário", content: CONTACT_INFO.hours }
                ].map((item, index) => (
                  <div 
                    key={index}
                    className="flex items-start"
                  >
                    <div className="w-8 h-8 bg-blue-50 rounded-lg flex items-center justify-center flex-shrink-0 mr-3">
                      <i className={`${item.icon} text-primary text-sm`}></i>
                    </div>
                    <div>
                      <h4 className="font-medium text-gray-800 text-sm">{item.title}</h4>
                      {Array.isArray(item.content) ? (
                        item.content.map((line, i) => (
                          <p key={i} className="text-gray-600 text-sm">{line}</p>
                        ))
                      ) : (
                        <p className="text-gray-600 text-sm">{item.content}</p>
                      )}
                    </div>
                  </div>
                ))}
              </div>
              
              <div className="mt-6 pt-4 border-t border-gray-100">
                <h4 className="font-medium mb-3">Redes Sociais</h4>
                <div className="flex gap-2">
                  {SOCIAL_MEDIA.map((social, index) => (
                    <a 
                      key={index}
                      href={social.url} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="w-8 h-8 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full flex items-center justify-center transition-colors"
                    >
                      <i className={`${social.icon} text-sm`}></i>
                    </a>
                  ))}
                </div>
              </div>
            </div>
          </div>
          
          <div className="md:w-2/3">
            <form onSubmit={handleSubmit} className="bg-white p-6 rounded-lg border border-gray-200">
              <h3 className="font-semibold text-lg mb-4">Envie sua mensagem</h3>
              
              <div className="space-y-5">
                {[
                  { id: "name", label: "Nome", type: "text", placeholder: "Seu nome completo", icon: "fas fa-user" },
                  { id: "email", label: "Email", type: "email", placeholder: "Seu email", icon: "fas fa-envelope" },
                  { id: "phone", label: "Telefone", type: "tel", placeholder: "Seu telefone", icon: "fas fa-phone" }
                ].map((field, index) => (
                  <motion.div 
                    key={field.id}
                    custom={index}
                    variants={formFieldVariants}
                    initial="hidden"
                    whileInView="visible"
                    viewport={{ once: true }}
                  >
                    <label htmlFor={field.id} className="block text-gray-700 font-medium mb-2 flex items-center">
                      <i className={`${field.icon} text-primary mr-2 text-sm`}></i>
                      {field.label}
                    </label>
                    <input 
                      type={field.type} 
                      id={field.id} 
                      value={formData[field.id as keyof typeof formData]}
                      onChange={handleInputChange}
                      onFocus={() => handleFocus(field.id)}
                      onBlur={handleBlur}
                      placeholder={field.placeholder} 
                      className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:border-primary focus:ring focus:ring-primary/20 focus:ring-opacity-50 transition-all duration-300" 
                    />
                  </motion.div>
                ))}
                
                <motion.div 
                  custom={3}
                  variants={formFieldVariants}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: true }}
                >
                  <label htmlFor="service" className="block text-gray-700 font-medium mb-2 flex items-center">
                    <i className="fas fa-tools text-primary mr-2 text-sm"></i>
                    Serviço
                  </label>
                  <select 
                    id="service" 
                    value={formData.service}
                    onChange={handleInputChange}
                    onFocus={() => handleFocus("service")}
                    onBlur={handleBlur}
                    className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:border-primary focus:ring focus:ring-primary/20 focus:ring-opacity-50 transition-all duration-300 appearance-none"
                  >
                    <option value="" disabled>Selecione o serviço desejado</option>
                    <option value="installation">Instalação Elétrica</option>
                    <option value="maintenance">Manutenção Preventiva</option>
                    <option value="repair">Reparos Emergenciais</option>
                    <option value="project">Projetos Elétricos</option>
                    <option value="panel">Quadros Elétricos</option>
                    <option value="lighting">Iluminação</option>
                    <option value="other">Outro</option>
                  </select>
                </motion.div>
                
                <motion.div 
                  custom={4}
                  variants={formFieldVariants}
                  initial="hidden"
                  whileInView="visible"
                  viewport={{ once: true }}
                >
                  <label htmlFor="message" className="block text-gray-700 font-medium mb-2 flex items-center">
                    <i className="fas fa-comment-alt text-primary mr-2 text-sm"></i>
                    Mensagem
                  </label>
                  <textarea 
                    id="message" 
                    rows={4} 
                    value={formData.message}
                    onChange={handleInputChange}
                    onFocus={() => handleFocus("message")}
                    onBlur={handleBlur}
                    placeholder="Descreva o serviço que você precisa" 
                    className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:border-primary focus:ring focus:ring-primary/20 focus:ring-opacity-50 transition-all duration-300 resize-none"
                  ></textarea>
                </motion.div>
                
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5, delay: 0.5 }}
                >
                  <Button 
                    type="submit" 
                    className="w-full bg-primary hover:bg-blue-700 text-white py-3 rounded-lg"
                    disabled={isSubmitting || contactMutation.isPending}
                  >
                    {isSubmitting || contactMutation.isPending ? (
                      <span className="flex items-center justify-center">
                        <motion.div 
                          className="w-5 h-5 border-2 border-white border-t-transparent rounded-full mr-2"
                          animate={{ rotate: 360 }}
                          transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
                        />
                        Enviando...
                      </span>
                    ) : (
                      <span className="flex items-center justify-center">
                        <i className="fas fa-paper-plane mr-2"></i>
                        Enviar Mensagem
                      </span>
                    )}
                  </Button>
                </motion.div>
                
                <motion.div
                  className="text-center mt-4"
                  initial={{ opacity: 0 }}
                  whileInView={{ opacity: 1 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5, delay: 0.6 }}
                >
                  <p className="text-gray-500 text-sm my-3">
                    Ou entre em contato diretamente pelo WhatsApp
                  </p>
                  
                  <a 
                    href={`https://wa.me/${WHATSAPP_NUMBER}`} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="w-full flex items-center justify-center gap-2 bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-lg"
                  >
                    <i className="fab fa-whatsapp"></i>
                    <span>Contato via WhatsApp</span>
                  </a>
                </motion.div>
              </div>
            </form>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Contact;